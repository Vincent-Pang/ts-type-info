{"version":3,"sources":["definitions/property-definition.ts"],"names":["PropertyDefinition","PropertyDefinition.constructor","PropertyDefinition.isProperty"],"mappings":";;;;;AAAA,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AACjC,4BAA8B,kBAAkB,CAAC,CAAA;AAGjD;IAAwCA,sCAAeA;IACnDA,4BAAYA,WAAwBA,EAAEA,MAAiBA;QACnDC,kBAAMA,WAAWA,EAAEA,MAAMA,CAACA,CAACA;IAC/BA,CAACA;IAEMD,6BAAUA,GAAjBA,UAAkBA,MAAiBA;QAC/BE,MAAMA,CAACA,CAACA,MAAMA,CAACA,QAAQA,EAAEA,GAAGA,CAAuBA,CAACA,KAAKA,CAACA,CAACA;IAC/DA,CAACA;IACLF,yBAACA;AAADA,CARA,AAQCA,EARuC,6BAAe,EAQtD;AARY,0BAAkB,qBAQ9B,CAAA","file":"definitions/property-definition.js","sourcesContent":["import * as ts from \"typescript\";\r\nimport {TypedDefinition} from \"./../definitions\";\r\nimport {TypeChecker} from \"./../utils\";\r\n\r\nexport class PropertyDefinition extends TypedDefinition {\r\n    constructor(typeChecker: TypeChecker, symbol: ts.Symbol) {\r\n        super(typeChecker, symbol);\r\n    }\r\n\r\n    static isProperty(symbol: ts.Symbol) {\r\n        return (symbol.getFlags() & ts.SymbolFlags.Property) !== 0;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}