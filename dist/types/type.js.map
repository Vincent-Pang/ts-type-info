{"version":3,"sources":["types/type.ts"],"names":["Type","Type.constructor","Type.name"],"mappings":";;;;;;;;AAAA,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AACjC,2BAA2B,uBAAuB,CAAC,CAAA;AAEnD;IAGIA,cAAYA,WAA2BA,EAASA,MAAeA,EAAEA,IAAaA;QAA9BC,WAAMA,GAANA,MAAMA,CAASA;QAC3DA,IAAIA,CAACA,KAAKA,GAAGA,WAAWA,CAACA,YAAYA,CAACA,MAAMA,EAAEA,IAAIA,EAAEA,CAAuBA,CAACA,CAACA;IACjFA,CAACA;IAEDD,sBACIA,sBAAIA;aADRA;YAEIE,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA;QACtBA,CAACA;;;OAAAF;IAHDA,sBACIA,sBAAIA;;YADPA,yBAAYA;WACTA,sBAAIA,kCAAJA,sBAAIA,IAEPA;IACLA,WAACA;AAADA,CAXA,AAWCA,IAAA;AAXY,YAAI,OAWhB,CAAA","file":"types/type.js","sourcesContent":["import * as ts from \"typescript\";\r\nimport {Serializable} from \"./../utils/decorators\";\r\n\r\nexport class Type {\r\n    private _name: string;\r\n\r\n    constructor(typeChecker: ts.TypeChecker, public tsType: ts.Type, node: ts.Node) {\r\n        this._name = typeChecker.typeToString(tsType, node, ts.TypeFormatFlags.None);\r\n    }\r\n\r\n    @Serializable\r\n    get name() {\r\n        return this._name;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}