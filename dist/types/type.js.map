{"version":3,"sources":["types/type.ts"],"names":["Type","Type.constructor","Type.name","Type.tsType"],"mappings":";;;;;;;;AAAA,IAAY,EAAE,WAAM,YAAY,CAAC,CAAA;AACjC,2BAA2B,uBAAuB,CAAC,CAAA;AAEnD;IAGIA,cAAYA,WAA2BA,EAAUA,OAAgBA,EAAEA,IAAaA;QAA/BC,YAAOA,GAAPA,OAAOA,CAASA;QAC7DA,IAAIA,CAACA,KAAKA,GAAGA,WAAWA,CAACA,YAAYA,CAACA,OAAOA,EAAEA,IAAIA,EAAEA,CAAuBA,CAACA,CAACA;IAClFA,CAACA;IAEDD,sBACIA,sBAAIA;aADRA;YAEIE,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA;QACtBA,CAACA;;;OAAAF;IAEDA,sBAAIA,wBAAMA;aAAVA;YACIG,MAAMA,CAACA,IAAIA,CAACA,OAAOA,CAACA;QACxBA,CAACA;;;OAAAH;IAPDA,sBACIA,sBAAIA;;YADPA,yBAAYA;WACTA,sBAAIA,kCAAJA,sBAAIA,IAEPA;IAKLA,WAACA;AAADA,CAfA,AAeCA,IAAA;AAfY,YAAI,OAehB,CAAA","file":"types/type.js","sourcesContent":["import * as ts from \"typescript\";\r\nimport {Serializable} from \"./../utils/decorators\";\r\n\r\nexport class Type {\r\n    private _name: string;\r\n\r\n    constructor(typeChecker: ts.TypeChecker, private _tsType: ts.Type, node: ts.Node) {\r\n        this._name = typeChecker.typeToString(_tsType, node, ts.TypeFormatFlags.None);\r\n    }\r\n\r\n    @Serializable\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get tsType() {\r\n        return this._tsType;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}